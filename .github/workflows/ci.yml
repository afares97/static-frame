name: CI

on:
  push:
    branches:
    - master
  pull_request:

env:
  CFLAGS: -Wno-error=implicit-function-declaration

jobs:
  #-----------------------------------------------------------------------------
  test:
    name: Test / ${{ matrix.os.name }} / Python ${{ matrix.python.version }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - {name: 'ubuntu-22.04', pip_cache: '~/.cache/pip'}
          - {name: 'windows-2022', pip_cache: '~\AppData\Local\pip\Cache'}
          - {name: 'macos-13', pip_cache: '~/Library/Caches/pip'}
        python:
          - {version: '3.8', requirements: 'requirements-test-3_08.txt'}
          - {version: '3.9', requirements: 'requirements-test-3_11.txt'}
          - {version: '3.10', requirements: 'requirements-test-3_11.txt'}
          - {version: '3.11', requirements: 'requirements-test-3_11.txt'}
          - {version: '3.12', requirements: 'requirements-test-3_12.txt'}

    runs-on: ${{ matrix.os.name }}

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python.version }}

    - uses: actions/cache@v2
      with:
        path: ${{ matrix.os.pip_cache }}
        key: test-pip-${{ matrix.os.name }}-${{ matrix.python.version }}-${{ hashFiles(matrix.python.requirements, '.github/workflows/ci.yml') }}
        restore-keys: test-pip-${{ matrix.os.name }}-${{ matrix.python.version }}-

    - run: |
        python -m pip install --upgrade pip
        pip install -r ${{ matrix.python.requirements }}

    - run: inv test --cov

    - uses: codecov/codecov-action@v3
      with:
        token: 6de39346-7381-441d-80d3-a6c0c051be2d
        files: coverage.xml
        fail_ci_if_error: false
        verbose: true

  #-----------------------------------------------------------------------------
  quality:
    name: Quality / ${{ matrix.os }} / Python ${{ matrix.python-version }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04']
        python-version: ['3.11']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: quality-pip-${{ hashFiles('requirements-dev-3_11.txt', '.github/workflows/ci.yml') }}
        restore-keys: quality-pip-

    - run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev-3_11.txt

    - run: inv quality

  #-----------------------------------------------------------------------------
  test_ex:
    name: Test Examples / ${{ matrix.os }} / Python ${{ matrix.python-version }}

    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04']
        python-version: ['3.11']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: quality-pip-${{ hashFiles('requirements-test-3_11.txt', '.github/workflows/ci.yml') }}
        restore-keys: quality-pip-

    - run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test-3_11.txt

    - run: inv testex --cov

    - uses: codecov/codecov-action@v3
      with:
        token: 6de39346-7381-441d-80d3-a6c0c051be2d
        files: coverage.xml
        fail_ci_if_error: false
        verbose: true